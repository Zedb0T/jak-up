;;-*-Lisp-*-
(in-package goal)

;; originally in:
;; name: firecanyon-obs.gc
;; name in dgo: firecanyon-obs
;; dgos: L1, FIC, OGR


;; DECOMP BEGINS


(deftype balloon (process-drawable)
  ((root-override collide-shape  :offset 112)
   )
  :heap-base #x40
  :method-count-assert 20
  :size-assert         #xb0
  :flag-assert         #x14004000b0
  (:states
    balloon-idle
    balloon-popping
    )
  )


(defpartgroup group-balloon
  :id 227
  :duration (seconds 0.017)
  :bounds (static-bspherem 0 0 0 15)
  :parts ((sp-item 1006) (sp-item 1007) (sp-item 1008))
  )

(defpart 1007
  :init-specs ((:texture (new 'static 'texture-id :page #x2))
    (:num 8.0)
    (:x (meters -1) (meters 2))
    (:y (meters 1) (meters 2))
    (:z (meters -1) (meters 2))
    (:scale-x (meters 3) (meters 3))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 96.0)
    (:g 96.0)
    (:b 255.0)
    (:a 32.0 32.0)
    (:rotvel-z (degrees -1.2) (degrees 2.4))
    (:fade-a -0.42666668)
    (:timer (seconds 0.5))
    (:flags (bit2 bit3))
    )
  )

(defpart 1008
  :init-specs ((:texture (new 'static 'texture-id :page #x2))
    (:num 16.0)
    (:y (meters 2))
    (:scale-x (meters 0.5) (meters 1))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 96.0)
    (:g 96.0)
    (:b 255.0)
    (:a 32.0 32.0)
    (:vel-y (meters 0.04) (meters 0.08))
    (:rotvel-z (degrees -1.2) (degrees 2.4))
    (:fade-a -0.85333335)
    (:friction 0.98)
    (:timer (seconds 0.25))
    (:flags (bit2 bit3))
    (:conerot-x (degrees 0) (degrees 180))
    (:conerot-y (degrees 0) (degrees 360))
    (:conerot-radius (meters 1.5))
    )
  )

(defpart 1006
  :init-specs ((:texture (new 'static 'texture-id :index #x12 :page #x2))
    (:num 1.0)
    (:y (meters 2))
    (:scale-x (meters 12))
    (:rot-z (degrees 0) (degrees 360))
    (:scale-y :copy scale-x)
    (:r 100.0 28.0)
    (:g 100.0)
    (:b 80.0)
    (:a 96.0)
    (:fade-a -0.08)
    (:timer (seconds 0.05))
    (:flags (bit2 bit3))
    )
  )

(defstate balloon-popping (balloon)
  :code (behavior ()
    (ja-channel-set! 0)
    (clear-collide-with-as (-> self root-override))
    (ja-post)
    (sound-play "cool-balloon")
    (process-spawn
      part-tracker
      :init part-tracker-init
      (-> *part-group-id-table* 227)
      -1
      #f
      #f
      #f
      (-> self root-override trans)
      :to *entity-pool*
      )
    (suspend)
    (cleanup-for-death self)
    (deactivate self)
    (none)
    )
  )

(defstate balloon-idle (balloon)
  :event (behavior ((arg0 process) (arg1 int) (arg2 symbol) (arg3 event-message-block))
    (case arg2
      (('attack)
       (send-event arg0 'heat -10.0)
       (go balloon-popping)
       )
      )
    )
  :code (behavior ()
    (transform-post)
    (loop
      (ja-no-eval :group! (ja-group) :num! (seek!) :frame-num 0.0)
      (until (ja-done? 0)
        (suspend)
        (ja :num! (seek!))
        )
      )
    (none)
    )
  :post (the-as (function none :behavior balloon) ja-post)
  )

;; (defskelgroup *balloon-sg* balloon balloon-lod0-jg balloon-idle-ja
;;               ((balloon-lod0-mg (meters 20)) (balloon-lod1-mg (meters 999999)))
;;               :bounds (static-spherem 0 0.3 0 6.3)
;;               )

(defmethod init-from-entity! balloon ((obj balloon) (arg0 entity-actor))
  (let ((s4-0 (new 'process 'collide-shape obj (collide-list-enum hit-by-player))))
    (let ((s3-0 (new 'process 'collide-shape-prim-sphere s4-0 (the-as uint 0))))
      (set! (-> s3-0 prim-core collide-as) (collide-kind enemy))
      (set! (-> s3-0 collide-with) (collide-kind target))
      (set! (-> s3-0 prim-core offense) (collide-offense indestructible))
      (set-vector! (-> s3-0 local-sphere) 0.0 8192.0 0.0 8192.0)
      (set-root-prim! s4-0 s3-0)
      )
    (set! (-> s4-0 nav-radius) (* 0.75 (-> s4-0 root-prim local-sphere w)))
    (backup-collide-with-as s4-0)
    (set! (-> obj root-override) s4-0)
    )
  (process-drawable-from-entity! obj arg0)
  (initialize-skeleton obj *balloon-sg* '())
  (set! (-> obj part) (create-launch-control (-> *part-group-id-table* 227) obj))
  (go balloon-idle)
  (none)
  )